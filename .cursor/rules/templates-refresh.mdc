# Refresh Mode Template

## Overview
For bug fixes, maintenance tasks, and resolving issues. Use when fixing broken functionality, resolving error messages, or addressing TODO/FIXME items in the codebase.

## Execution Workflow

### 1. Diagnose (Investigation)
- Restate goal: "I will identify and fix…"
- **Run tests**: execute `<test_command>` to surface failing tests.
- **Scan errors**: search logs or console output for error messages.
- **Find markers**: `grep_search` for TODO/FIXME comments or known issue keywords.
- **Short plan** (≤3 bullets):
  1. <Issue A identified>
  2. <Issue B identified>
  3. <Optional: any dependency/version conflicts>

> If YOLO_MODE=off, present this diagnosis and await approval; else proceed.

### 2. Fix (Targeted Edits)
For each identified issue:
1. **Locate code**: use `codebase_search` + `read_file` to find relevant functions/files.
2. **Apply fix**: use `edit_file` to correct logic or update implementation.
3. **Remove markers**: clear related TODO/FIXME once addressed.
4. **Commit checkpoint** (optional): group each fix logically.

> Always "Read Before Write" and verify the edited code makes sense.

### 3. Validate (Test & Lint Loop)
- **Re-run tests**: `<test_command>`
- **Re-run linter/static analysis**: `<lint_command>`
- **If failures/warnings remain**:
  - Diagnose the new output.
  - Return to Fix to resolve.
  - Repeat until clean.

> Use `timeout 30s … | cat` and non‑interactive flags to avoid hangs.

### 4. Report (Summary)
In chat, provide:
- Issues resolved: list each bug and its fix.
- Status: "All tests passing, no lint errors."
- Any lingering recommendations or follow‑ups.

> Keep it concise—no full logs or diffs.

### 5. Context Update (Persistence)
- **context.json**: update with  
  ```json
  {
    "last_task": "<TASK>",
    "summary": "Fixed <issue A>, <issue B>; tests green.",
    "next_steps": [ ... ]
  }
  ```

## Key Principles
- Diagnose thoroughly - understand the root cause before fixing
- Fix incrementally - address one issue at a time
- Test continuously - validate each fix immediately
- Clear markers - remove TODO/FIXME items when addressed
- Document fixes - explain what was changed and why 